# check status
docker-compose exec cass1 nodetool status
docker-compose exec cass2 nodetool status
docker-compose exec cass3 nodetool status

# put data before
docker-compose exec cass1 bash ./data_before.sh

# upgrade
docker-compose exec cass1 pkill -f /usr/bin/java
docker-compose exec cass1 bash -c 'echo "deb http://www.apache.org/dist/cassandra/debian 40x main" | tee /etc/apt/sources.list.d/cassandra.sources.list'
docker-compose exec cass1 bash -c 'curl https://downloads.apache.org/cassandra/KEYS  | apt-key add - && apt-get -y update'
docker-compose exec cass1 apt install -y cassandra=4.0.4

# check status
docker-compose exec cass1 nodetool status
docker-compose exec cass2 nodetool status
docker-compose exec cass3 nodetool status

# fix yaml
docker-compose exec cass1 bash ./update_sed.sh

# start server
docker-compose exec cass1 bash -c 'nohup ./entry-docker.sh'

# check status
docker-compose exec cass1 nodetool status
docker-compose exec cass2 nodetool status
docker-compose exec cass3 nodetool status

# put data after
docker-compose exec cass1 bash ./data_after.sh

# test all instances
docker-compose exec cass1 bash -c 'cqlsh -e "SELECT * FROM lior.test;"'
docker-compose exec cass2 bash -c 'cqlsh -e "SELECT * FROM lior.test;"'
docker-compose exec cass3 bash -c 'cqlsh -e "SELECT * FROM lior.test;"'
